apply plugin: "java"
apply plugin: "signing"

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "com.arcbounds.launch"
archivesBaseName = "launch_wrapper"
version = "0.1"

configurations {
    provided {
        compile.extendsFrom(provided)
    }
}

repositories {
    mavenLocal()
    jcenter()
    maven {
        name = "minecraft"
        url = "https://libraries.minecraft.net"
    }
    maven {
        name = "spongepowered"
        url = "https://repo.spongepowered.org/maven"
    }
}

dependencies {
    provided('org.spigotmc:spigot:1.16.4-R0.1-SNAPSHOT')
    provided("com.google.code.gson:gson:2.8.0")
    provided("com.google.guava:guava:21.0")
    compile("commons-io:commons-io:2.5")
    compile("net.minecraft:launchwrapper:1.12") {
        exclude module: 'jopt-simple'
    }
    provided("org.apache.logging.log4j:log4j-api:2.8.1")
    provided("org.apache.logging.log4j:log4j-core:2.8.1")
    annotationProcessor("org.apache.logging.log4j:log4j-core:2.8.1")
    provided("org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209")
    compile("org.slf4j:slf4j-simple:1.7.25")
    compile("org.spongepowered:mixin:0.7.5-SNAPSHOT")
}

jar {
    manifest {
        attributes(
            "Main-Class": "com.arcbounds.launch.Main",
            "MixinConfigs": "mixins.launch.json"
        )
    }

    from {
        (configurations.compile - configurations.provided).findAll({
            it.isDirectory() || it.name.endsWith(".jar")
        }).collect({
            it.isDirectory() ? it : zipTree(it)
        })
    }

    exclude("META-INF/MUMFREY.RSA")
    exclude("META-INF/MUMFREY.SF")
    exclude("Log4j-config.xsd")
    exclude("Log4j-events.dtd")
    exclude("Log4j-events.xsd")
    exclude("log4j2.xml")
}

tasks.withType(org.gradle.jvm.tasks.Jar) {
    String server = System.getenv("ARC_TEST_SERVER")
    if (server != null)
        destinationDir = file("$server/")
}

processResources {
    from("LICENSE")
    rename("LICENSE", "LICENSE-" + archivesBaseName)
}
